# Generated by Django 5.1.10 on 2025-07-26 11:07

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('course', '0037_remove_exercisevocabularymultiplechoice_lesson_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='StudentCourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purchased_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('price_paid', models.DecimalField(decimal_places=2, max_digits=8)),
                ('payment_method', models.CharField(max_length=50)),
                ('transaction_id', models.CharField(max_length=100, unique=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('completed', 'Completed'), ('expired', 'Expired'), ('suspended', 'Suspended')], default='active', max_length=20)),
                ('access_expires_at', models.DateTimeField(blank=True, help_text='Lifetime access if null', null=True)),
                ('progress_percentage', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(100)])),
                ('last_accessed', models.DateTimeField(default=django.utils.timezone.now)),
                ('time_spent_minutes', models.PositiveIntegerField(default=0)),
                ('teacher_name', models.CharField(max_length=200)),
                ('teacher_id', models.PositiveIntegerField(help_text='Teacher ID from CMS')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrolled_courses', to=settings.AUTH_USER_MODEL)),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_enrollments', to='course.unit')),
            ],
            options={
                'db_table': 'student_courses',
                'ordering': ['-last_accessed'],
                'unique_together': {('student', 'unit')},
            },
        ),
        migrations.CreateModel(
            name='LearningSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('started_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('ended_at', models.DateTimeField(blank=True, null=True)),
                ('duration_seconds', models.PositiveIntegerField(default=0)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('device_type', models.CharField(blank=True, max_length=50)),
                ('interactions_count', models.PositiveIntegerField(default=0)),
                ('exercises_completed', models.PositiveIntegerField(default=0)),
                ('lesson', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='course.lesson')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='learning_sessions', to=settings.AUTH_USER_MODEL)),
                ('student_course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='learning.studentcourse')),
            ],
            options={
                'db_table': 'learning_sessions',
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='StudentLessonProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('not_started', 'Not Started'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('locked', 'Locked')], default='not_started', max_length=20)),
                ('progress_percentage', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(100)])),
                ('time_spent_minutes', models.PositiveIntegerField(default=0)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('last_accessed', models.DateTimeField(default=django.utils.timezone.now)),
                ('attempts_count', models.PositiveIntegerField(default=0)),
                ('best_score', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(100)])),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='course.lesson')),
                ('student_course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lesson_progress', to='learning.studentcourse')),
            ],
            options={
                'db_table': 'student_lesson_progress',
                'ordering': ['lesson__order'],
                'unique_together': {('student_course', 'lesson')},
            },
        ),
        migrations.CreateModel(
            name='LearningAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('total_time_minutes', models.PositiveIntegerField(default=0)),
                ('lessons_started', models.PositiveIntegerField(default=0)),
                ('lessons_completed', models.PositiveIntegerField(default=0)),
                ('exercises_completed', models.PositiveIntegerField(default=0)),
                ('average_score', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(100)])),
                ('streak_days', models.PositiveIntegerField(default=0)),
                ('sessions_count', models.PositiveIntegerField(default=0)),
                ('unique_courses_accessed', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='learning_analytics', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'learning_analytics',
                'ordering': ['-date'],
                'unique_together': {('student', 'date')},
            },
        ),
        migrations.CreateModel(
            name='StudentContentProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_completed', models.BooleanField(default=False)),
                ('score', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(100)])),
                ('attempts', models.PositiveIntegerField(default=0)),
                ('time_spent_seconds', models.PositiveIntegerField(default=0)),
                ('user_answers', models.JSONField(blank=True, default=dict)),
                ('correct_answers', models.JSONField(blank=True, default=dict)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('content_lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='course.contentlesson')),
                ('lesson_progress', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='content_progress', to='learning.studentlessonprogress')),
            ],
            options={
                'db_table': 'student_content_progress',
                'unique_together': {('lesson_progress', 'content_lesson')},
            },
        ),
        migrations.CreateModel(
            name='StudentReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('title', models.CharField(blank=True, max_length=200)),
                ('review_text', models.TextField(blank=True)),
                ('is_verified_purchase', models.BooleanField(default=True)),
                ('is_public', models.BooleanField(default=True)),
                ('helpful_votes', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_reviews', to=settings.AUTH_USER_MODEL)),
                ('student_course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='learning.studentcourse')),
            ],
            options={
                'db_table': 'student_reviews',
                'ordering': ['-created_at'],
                'unique_together': {('student', 'student_course')},
            },
        ),
    ]
