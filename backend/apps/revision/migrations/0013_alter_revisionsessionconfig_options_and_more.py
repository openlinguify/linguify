# Generated by Django 5.1.10 on 2025-07-14 12:40

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('revision', '0012_add_revision_settings_models'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='revisionsessionconfig',
            options={'verbose_name': 'Configuration de session', 'verbose_name_plural': 'Configurations de sessions'},
        ),
        migrations.AlterUniqueTogether(
            name='revisionsessionconfig',
            unique_together={('user', 'name')},
        ),
        migrations.RemoveField(
            model_name='revisionsettings',
            name='achievement_notifications',
        ),
        migrations.RemoveField(
            model_name='revisionsettings',
            name='multiplier_easy',
        ),
        migrations.RemoveField(
            model_name='revisionsettings',
            name='multiplier_hard',
        ),
        migrations.RemoveField(
            model_name='revisionsettings',
            name='multiplier_normal',
        ),
        migrations.RemoveField(
            model_name='revisionsettings',
            name='streak_notifications',
        ),
        migrations.RemoveField(
            model_name='revisionsettings',
            name='theme_preference',
        ),
        migrations.AddField(
            model_name='revisionsessionconfig',
            name='difficulty_filter',
            field=models.JSONField(blank=True, default=list, help_text='Niveaux de difficulté à inclure'),
        ),
        migrations.AddField(
            model_name='revisionsessionconfig',
            name='duration_minutes',
            field=models.PositiveIntegerField(default=20, validators=[django.core.validators.MinValueValidator(5), django.core.validators.MaxValueValidator(120)]),
        ),
        migrations.AddField(
            model_name='revisionsessionconfig',
            name='include_difficult_cards',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='revisionsessionconfig',
            name='session_type',
            field=models.CharField(choices=[('quick', 'Session rapide'), ('standard', 'Session standard'), ('extended', 'Session étendue'), ('custom', 'Session personnalisée')], default='standard', max_length=20),
        ),
        migrations.AddField(
            model_name='revisionsessionconfig',
            name='tags_filter',
            field=models.JSONField(blank=True, default=list, help_text='Tags à inclure dans cette session'),
        ),
        migrations.AddField(
            model_name='revisionsessionconfig',
            name='target_cards',
            field=models.PositiveIntegerField(default=20, validators=[django.core.validators.MinValueValidator(5), django.core.validators.MaxValueValidator(200)]),
        ),
        migrations.AddField(
            model_name='revisionsettings',
            name='reset_on_wrong_answer',
            field=models.BooleanField(default=False, help_text='Remettre le compteur à zéro si mauvaise réponse'),
        ),
        migrations.AlterField(
            model_name='revisionsessionconfig',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='revisionsessionconfig',
            name='include_new_cards',
            field=models.BooleanField(default=True),
        ),
        migrations.AlterField(
            model_name='revisionsessionconfig',
            name='include_review_cards',
            field=models.BooleanField(default=True),
        ),
        migrations.AlterField(
            model_name='revisionsessionconfig',
            name='is_default',
            field=models.BooleanField(default=False, help_text='Configuration par défaut pour cet utilisateur'),
        ),
        migrations.AlterField(
            model_name='revisionsessionconfig',
            name='name',
            field=models.CharField(help_text='Nom de cette configuration', max_length=100),
        ),
        migrations.AlterField(
            model_name='revisionsessionconfig',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='revision_session_configs', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='revisionsettings',
            name='auto_advance',
            field=models.BooleanField(default=True, help_text='Passer automatiquement à la carte suivante après validation'),
        ),
        migrations.AlterField(
            model_name='revisionsettings',
            name='auto_play_audio',
            field=models.BooleanField(default=False, help_text="Lecture automatique de l'audio (si disponible)"),
        ),
        migrations.AlterField(
            model_name='revisionsettings',
            name='cards_per_session',
            field=models.PositiveIntegerField(default=20, help_text='Nombre de cartes par session par défaut', validators=[django.core.validators.MinValueValidator(5), django.core.validators.MaxValueValidator(100)]),
        ),
        migrations.AlterField(
            model_name='revisionsettings',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='revisionsettings',
            name='daily_reminder_enabled',
            field=models.BooleanField(default=True, help_text='Activer les rappels quotidiens'),
        ),
        migrations.AlterField(
            model_name='revisionsettings',
            name='default_difficulty',
            field=models.CharField(choices=[('easy', 'Facile'), ('normal', 'Normal'), ('hard', 'Difficile'), ('expert', 'Expert')], default='normal', help_text='Niveau de difficulté par défaut', max_length=20),
        ),
        migrations.AlterField(
            model_name='revisionsettings',
            name='default_session_duration',
            field=models.PositiveIntegerField(default=20, help_text="Durée par défaut d'une session en minutes", validators=[django.core.validators.MinValueValidator(5), django.core.validators.MaxValueValidator(120)]),
        ),
        migrations.AlterField(
            model_name='revisionsettings',
            name='default_study_mode',
            field=models.CharField(choices=[('spaced', 'Répétition espacée'), ('intensive', 'Révision intensive'), ('mixed', 'Mode mixte'), ('custom', 'Personnalisé')], default='spaced', help_text="Mode d'étude par défaut pour les nouvelles sessions", max_length=20),
        ),
        migrations.AlterField(
            model_name='revisionsettings',
            name='enable_animations',
            field=models.BooleanField(default=True, help_text="Activer les animations dans l'interface"),
        ),
        migrations.AlterField(
            model_name='revisionsettings',
            name='initial_interval_easy',
            field=models.PositiveIntegerField(default=4, help_text='Intervalle initial en jours pour les cartes faciles', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(30)]),
        ),
        migrations.AlterField(
            model_name='revisionsettings',
            name='initial_interval_hard',
            field=models.PositiveIntegerField(default=1, help_text='Intervalle initial en jours pour les cartes difficiles', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(30)]),
        ),
        migrations.AlterField(
            model_name='revisionsettings',
            name='initial_interval_normal',
            field=models.PositiveIntegerField(default=2, help_text='Intervalle initial en jours pour les cartes normales', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(30)]),
        ),
        migrations.AlterField(
            model_name='revisionsettings',
            name='keyboard_shortcuts_enabled',
            field=models.BooleanField(default=True, help_text='Activer les raccourcis clavier'),
        ),
        migrations.AlterField(
            model_name='revisionsettings',
            name='notification_frequency',
            field=models.CharField(choices=[('daily', 'Quotidienne'), ('weekly', 'Hebdomadaire'), ('custom', 'Personnalisée'), ('disabled', 'Désactivée')], default='daily', help_text='Fréquence des notifications', max_length=20),
        ),
        migrations.AlterField(
            model_name='revisionsettings',
            name='reminder_time',
            field=models.TimeField(default='18:00', help_text='Heure des rappels quotidiens'),
        ),
        migrations.AlterField(
            model_name='revisionsettings',
            name='required_reviews_to_learn',
            field=models.PositiveIntegerField(default=3, help_text='Nombre de révisions correctes pour marquer une carte comme apprise', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)]),
        ),
        migrations.AlterField(
            model_name='revisionsettings',
            name='show_progress_stats',
            field=models.BooleanField(default=True, help_text='Afficher les statistiques de progression'),
        ),
        migrations.AlterField(
            model_name='revisionsettings',
            name='spaced_repetition_enabled',
            field=models.BooleanField(default=True, help_text="Activer l'algorithme de répétition espacée"),
        ),
        migrations.AlterField(
            model_name='revisionsettings',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='revision_settings', to=settings.AUTH_USER_MODEL),
        ),
        migrations.RemoveField(
            model_name='revisionsessionconfig',
            name='cards_count',
        ),
        migrations.RemoveField(
            model_name='revisionsessionconfig',
            name='description',
        ),
        migrations.RemoveField(
            model_name='revisionsessionconfig',
            name='difficulty_override',
        ),
        migrations.RemoveField(
            model_name='revisionsessionconfig',
            name='include_failed_cards',
        ),
        migrations.RemoveField(
            model_name='revisionsessionconfig',
            name='session_duration',
        ),
        migrations.RemoveField(
            model_name='revisionsessionconfig',
            name='study_mode',
        ),
    ]
