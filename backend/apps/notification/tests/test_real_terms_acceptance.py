#!/usr/bin/env python
"""
Test final pour v√©rifier l'acceptation r√©elle des conditions d'utilisation
avec v√©rification du changement de statut dans la base de donn√©es
"""
import os
import sys
import django

# Remonter au r√©pertoire backend
sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))))

# Configuration Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'core.settings')
django.setup()

from django.contrib.auth import get_user_model
from django.conf import settings
from django.utils import timezone
from apps.notification.services import send_terms_acceptance_email_and_notification
from apps.notification.models import Notification

User = get_user_model()

def check_user_terms_status(user, label=""):
    """V√©rifie le statut des conditions d'utilisation de l'utilisateur"""
    print(f"\nüìä STATUT UTILISATEUR {label}")
    print("-" * 50)
    print(f"  ‚Ä¢ Email: {user.email}")
    print(f"  ‚Ä¢ Username: {user.username}")
    print(f"  ‚Ä¢ Interface Language: {user.interface_language}")
    print(f"  ‚Ä¢ Terms Accepted: {'‚úÖ' if user.terms_accepted else '‚ùå'}")

    if user.terms_accepted_at:
        print(f"  ‚Ä¢ Terms Accepted At: {user.terms_accepted_at.strftime('%Y-%m-%d %H:%M:%S')}")
    else:
        print(f"  ‚Ä¢ Terms Accepted At: ‚ùå Non d√©fini")

    print(f"  ‚Ä¢ Terms Version: {user.terms_version or '‚ùå Non d√©fini'}")
    print(f"  ‚Ä¢ Last Login: {user.last_login.strftime('%Y-%m-%d %H:%M:%S') if user.last_login else '‚ùå'}")
    print(f"  ‚Ä¢ Is Active: {'‚úÖ' if user.is_active else '‚ùå'}")

def test_real_terms_acceptance():
    """Test complet d'acceptation des conditions d'utilisation"""

    print("üöÄ TEST FINAL - ACCEPTATION R√âELLE DES CONDITIONS")
    print("=" * 70)

    # 1. R√©cup√©rer l'utilisateur
    try:
        user = User.objects.get(email='linguify.info@gmail.com')
        print(f"‚úì Utilisateur trouv√©: {user.username} ({user.email})")
    except User.DoesNotExist:
        print("‚ùå Utilisateur linguify.info@gmail.com non trouv√©")
        return False

    # 2. V√©rifier le statut AVANT
    check_user_terms_status(user, "AVANT")

    # 3. Simuler le fait que l'utilisateur n'a pas accept√© les conditions
    print(f"\nüîÑ R√âINITIALISATION DU STATUT (pour test)")
    print("-" * 50)

    original_terms_accepted = user.terms_accepted
    original_terms_accepted_at = user.terms_accepted_at
    original_terms_version = user.terms_version

    # Marquer comme non accept√© pour le test
    user.terms_accepted = False
    user.terms_accepted_at = None
    user.terms_version = None
    user.save()

    print("‚úì Statut r√©initialis√© (terms_accepted = False)")
    check_user_terms_status(user, "APR√àS R√âINITIALISATION")

    # 4. Envoyer une vraie notification
    print(f"\nüìß ENVOI NOTIFICATION R√âELLE")
    print("-" * 50)

    success = send_terms_acceptance_email_and_notification(user)

    if success:
        print("‚úÖ Notification et email envoy√©s avec succ√®s")

        # R√©cup√©rer la derni√®re notification
        latest_notification = Notification.objects.filter(
            user=user,
            type='action_required'
        ).order_by('-created_at').first()

        if latest_notification:
            print(f"\nüìã Notification cr√©√©e:")
            print(f"  ‚Ä¢ ID: {str(latest_notification.id)[:8]}...")
            print(f"  ‚Ä¢ Titre: {latest_notification.title}")
            print(f"  ‚Ä¢ Message: {latest_notification.message[:60]}...")
            print(f"  ‚Ä¢ Non lue: {'‚úì' if not latest_notification.is_read else '‚úó'}")

            if latest_notification.data and 'action_url' in latest_notification.data:
                action_url = latest_notification.data['action_url']
                print(f"  ‚Ä¢ Action URL: {action_url}")

                # V√©rifier que l'URL pointe vers le portal
                portal_url = getattr(settings, 'PORTAL_URL', 'http://localhost:8080')
                expected_url = f"{portal_url}/annexes/terms"

                backend_url = getattr(settings, 'SITE_URL', 'http://localhost:8000')
                expected_url_new = f"{backend_url}/authentication/terms/accept/"

                if action_url == expected_url_new:
                    print("  ‚úÖ URL correcte vers la page d'acceptation")
                else:
                    print(f"  ‚ö†Ô∏è URL incorrecte. Attendu: {expected_url_new}")
            else:
                print("  ‚ùå Pas d'action_url dans les donn√©es")
    else:
        print("‚ùå √âchec d'envoi de la notification")
        return False

    # 5. Instructions pour le test manuel
    print(f"\nüß™ √âTAPES DE TEST MANUEL")
    print("=" * 70)
    print(f"\n1Ô∏è‚É£ CONNEXION:")
    print(f"   ‚Ä¢ URL: http://localhost:8000/")
    print(f"   ‚Ä¢ Email: {user.email}")
    print(f"   ‚Ä¢ Mot de passe: TestPassword123!")

    print(f"\n2Ô∏è‚É£ CLIQUER SUR LA NOTIFICATION:")
    print(f"   ‚Ä¢ Cliquez sur l'ic√¥ne cloche üîî")
    print(f"   ‚Ä¢ Cliquez sur: '{latest_notification.title if latest_notification else 'Notification des conditions'}'")
    backend_url = getattr(settings, 'SITE_URL', 'http://localhost:8000')
    print(f"   ‚Ä¢ Vous devriez √™tre redirig√© vers: {backend_url}/authentication/terms/accept/")

    print(f"\n3Ô∏è‚É£ ACCEPTER LES CONDITIONS:")
    print(f"   ‚Ä¢ Sur la page des conditions, cliquez sur 'Accepter'")
    print(f"   ‚Ä¢ Cela devrait mettre √† jour le statut dans la base de donn√©es")

    print(f"\n4Ô∏è‚É£ V√âRIFIER LE CHANGEMENT:")
    print(f"   ‚Ä¢ Utilisez la commande: python apps/notification/tests/check_user_acceptance_status.py")
    print(f"   ‚Ä¢ Ou v√©rifiez dans l'admin Django")

    # 6. Cr√©er un script de v√©rification
    verification_script = f"""#!/usr/bin/env python
import os
import sys
import django

sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'core.settings')
django.setup()

from django.contrib.auth import get_user_model
User = get_user_model()

def check_acceptance():
    try:
        user = User.objects.get(email='linguify.info@gmail.com')
        print("üìä STATUT APR√àS ACCEPTATION")
        print("=" * 50)
        print(f"Email: {{user.email}}")
        print(f"Terms Accepted: {{'‚úÖ OUI' if user.terms_accepted else '‚ùå NON'}}")
        print(f"Terms Accepted At: {{user.terms_accepted_at or '‚ùå Non d√©fini'}}")
        print(f"Terms Version: {{user.terms_version or '‚ùå Non d√©fini'}}")

        if user.terms_accepted:
            print("\\nüéâ SUCC√àS! L'utilisateur a accept√© les conditions")
        else:
            print("\\n‚ö†Ô∏è L'utilisateur n'a pas encore accept√© les conditions")

    except User.DoesNotExist:
        print("‚ùå Utilisateur non trouv√©")

if __name__ == "__main__":
    check_acceptance()
"""

    with open('/mnt/c/Users/louis/WebstormProjects/linguify/backend/apps/notification/tests/check_user_acceptance_status.py', 'w') as f:
        f.write(verification_script)

    print(f"\nüìù Script de v√©rification cr√©√©: check_user_acceptance_status.py")

    # 7. Remettre le statut original (si c'√©tait accept√© avant)
    print(f"\nüîÑ RESTAURATION DU STATUT ORIGINAL")
    print("-" * 50)

    user.terms_accepted = original_terms_accepted
    user.terms_accepted_at = original_terms_accepted_at
    user.terms_version = original_terms_version
    user.save()

    print("‚úì Statut original restaur√©")
    check_user_terms_status(user, "FINAL (RESTAUR√â)")

    # 8. R√©sum√©
    print(f"\n" + "=" * 70)
    print("üìã R√âSUM√â DU TEST")
    print("=" * 70)
    print(f"\n‚úÖ Actions r√©alis√©es:")
    print(f"  ‚Ä¢ Notification de conditions d'utilisation envoy√©e")
    print(f"  ‚Ä¢ Email envoy√© √† {user.email}")
    print(f"  ‚Ä¢ URL de redirection configur√©e: {portal_url}/annexes/terms")
    print(f"  ‚Ä¢ Script de v√©rification cr√©√©")

    print(f"\nüéØ Pour tester:")
    print(f"  1. Connectez-vous et cliquez sur la notification")
    print(f"  2. Acceptez les conditions sur la page du portal")
    print(f"  3. V√©rifiez le changement avec: poetry run python apps/notification/tests/check_user_acceptance_status.py")

    return True

if __name__ == "__main__":
    print("üöÄ Open Linguify - Test Acceptation R√©elle des Conditions")
    print("=" * 70)

    success = test_real_terms_acceptance()

    if success:
        print("\n‚ú® Test pr√©par√© avec succ√®s!")
        print("üëÜ Suivez les √©tapes ci-dessus pour tester l'acceptation compl√®te")
    else:
        print("\n‚ö†Ô∏è √âchec de pr√©paration du test")
        sys.exit(1)