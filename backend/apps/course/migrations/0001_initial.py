# Generated by Django 5.1.10 on 2025-09-04 23:39

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Chapter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_en', models.CharField(default='', max_length=100)),
                ('title_fr', models.CharField(default='', max_length=100)),
                ('title_es', models.CharField(default='', max_length=100)),
                ('title_nl', models.CharField(default='', max_length=100)),
                ('description_en', models.TextField(blank=True, null=True)),
                ('description_fr', models.TextField(blank=True, null=True)),
                ('description_es', models.TextField(blank=True, null=True)),
                ('description_nl', models.TextField(blank=True, null=True)),
                ('theme', models.CharField(default='', max_length=50)),
                ('order', models.IntegerField(default=1)),
                ('is_checkpoint_required', models.BooleanField(default=False)),
                ('style', models.CharField(choices=[('Open Linguify', 'Open Linguify Style'), ('OpenLinguify', 'OpenLinguify Style'), ('custom', 'Custom Style')], default='Open Linguify', max_length=20)),
                ('points_reward', models.IntegerField(default=100)),
            ],
            options={
                'verbose_name': 'Chapitre',
                'verbose_name_plural': 'Chapitres',
                'ordering': ['unit', 'order'],
            },
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_en', models.CharField(blank=True, max_length=100, null=True)),
                ('title_fr', models.CharField(blank=True, max_length=100, null=True)),
                ('title_es', models.CharField(blank=True, max_length=100, null=True)),
                ('title_nl', models.CharField(blank=True, max_length=100, null=True)),
                ('description_en', models.TextField(blank=True, null=True)),
                ('description_fr', models.TextField(blank=True, null=True)),
                ('description_es', models.TextField(blank=True, null=True)),
                ('description_nl', models.TextField(blank=True, null=True)),
                ('level', models.CharField(choices=[('A1', 'A1'), ('A2', 'A2'), ('B1', 'B1'), ('B2', 'B2'), ('C1', 'C1'), ('C2', 'C2')], default='A1', max_length=2)),
                ('order', models.IntegerField(default=1)),
                ('cms_unit_id', models.IntegerField(blank=True, null=True)),
                ('teacher_id', models.IntegerField(blank=True, null=True)),
                ('teacher_name', models.CharField(blank=True, max_length=100, null=True)),
                ('is_published', models.BooleanField(default=False)),
                ('is_free', models.BooleanField(default=True)),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('last_sync', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Unité de cours',
                'verbose_name_plural': 'Unités de cours',
                'ordering': ['level', 'order'],
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_en', models.CharField(blank=True, max_length=100, null=True)),
                ('title_fr', models.CharField(blank=True, max_length=100, null=True)),
                ('title_es', models.CharField(blank=True, max_length=100, null=True)),
                ('title_nl', models.CharField(blank=True, max_length=100, null=True)),
                ('description_en', models.TextField(blank=True, null=True)),
                ('description_fr', models.TextField(blank=True, null=True)),
                ('description_es', models.TextField(blank=True, null=True)),
                ('description_nl', models.TextField(blank=True, null=True)),
                ('lesson_type', models.CharField(choices=[('vocabulary', 'Vocabulary'), ('grammar', 'Grammar'), ('culture', 'Culture'), ('professional', 'Professional')], default='vocabulary', max_length=20)),
                ('estimated_duration', models.IntegerField(default=10)),
                ('order', models.IntegerField(default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('chapter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lessons', to='course.chapter')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lessons', to='course.unit')),
            ],
            options={
                'verbose_name': 'Leçon',
                'verbose_name_plural': 'Leçons',
                'ordering': ['unit', 'chapter', 'order'],
            },
        ),
        migrations.CreateModel(
            name='ContentLesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_content', models.TextField(blank=True, null=True)),
                ('video_url', models.URLField(blank=True, null=True)),
                ('audio_url', models.URLField(blank=True, null=True)),
                ('content_type', models.CharField(choices=[('text', 'Text'), ('video', 'Video'), ('audio', 'Audio'), ('interactive', 'Interactive'), ('mixed', 'Mixed')], default='text', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('lesson', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='content', to='course.lesson')),
            ],
            options={
                'verbose_name': 'Contenu de leçon',
                'verbose_name_plural': 'Contenus de leçons',
            },
        ),
        migrations.AddField(
            model_name='chapter',
            name='unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chapters', to='course.unit'),
        ),
        migrations.CreateModel(
            name='UserProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_xp', models.PositiveIntegerField(default=0)),
                ('streak_days', models.PositiveIntegerField(default=0)),
                ('last_activity_date', models.DateField(auto_now=True)),
                ('current_level', models.CharField(default='A1', max_length=10)),
                ('total_study_time', models.PositiveIntegerField(default=0)),
                ('overall_progress', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_progress', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Progression utilisateur',
                'verbose_name_plural': 'Progressions utilisateur',
                'db_table': 'course_user_progress',
            },
        ),
        migrations.CreateModel(
            name='ChapterProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('progress_percentage', models.PositiveIntegerField(default=0)),
                ('time_spent', models.PositiveIntegerField(default=0)),
                ('lessons_completed', models.PositiveIntegerField(default=0)),
                ('chapter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_progress', to='course.chapter')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chapter_progress', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Progression de chapitre',
                'verbose_name_plural': 'Progressions de chapitres',
                'db_table': 'course_chapter_progress',
                'unique_together': {('user', 'chapter')},
            },
        ),
        migrations.CreateModel(
            name='LessonProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(default='not_started', max_length=20)),
                ('progress_percentage', models.PositiveIntegerField(default=0)),
                ('attempts', models.PositiveIntegerField(default=0)),
                ('best_score', models.PositiveIntegerField(default=0)),
                ('xp_earned', models.PositiveIntegerField(default=0)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('last_accessed', models.DateTimeField(auto_now=True)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_progress', to='course.lesson')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lesson_progress', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Progression de leçon',
                'verbose_name_plural': 'Progressions de leçons',
                'db_table': 'course_lesson_progress',
                'indexes': [models.Index(fields=['user', 'completed_at'], name='course_less_user_id_b7bd96_idx'), models.Index(fields=['lesson', 'completed_at'], name='course_less_lesson__f29cc8_idx')],
                'unique_together': {('user', 'lesson')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='chapter',
            unique_together={('unit', 'order')},
        ),
        migrations.CreateModel(
            name='UnitProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(default='not_started', max_length=20)),
                ('progress_percentage', models.PositiveIntegerField(default=0)),
                ('chapters_completed', models.PositiveIntegerField(default=0)),
                ('lessons_completed', models.PositiveIntegerField(default=0)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('last_accessed', models.DateTimeField(auto_now=True)),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_progress', to='course.unit')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='unit_progress', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': "Progression d'unité",
                'verbose_name_plural': "Progressions d'unités",
                'db_table': 'course_unit_progress',
                'unique_together': {('user', 'unit')},
            },
        ),
    ]
