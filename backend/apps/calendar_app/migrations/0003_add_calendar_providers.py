# Generated by Django 5.1.10 on 2025-08-18 21:38

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('calendar_app', '0002_add_email_templates'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CalendarProvider',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text="Display name for this provider (e.g., 'Work Calendar')", max_length=100)),
                ('provider_type', models.CharField(choices=[('google', 'Google Calendar'), ('outlook', 'Microsoft Outlook'), ('office365', 'Office 365'), ('apple', 'Apple iCloud'), ('caldav', 'CalDAV'), ('exchange', 'Microsoft Exchange'), ('zimbra', 'Zimbra'), ('yahoo', 'Yahoo Calendar')], help_text='Type of calendar provider', max_length=20)),
                ('client_id', models.CharField(blank=True, help_text='OAuth client ID or application ID', max_length=255)),
                ('encrypted_credentials', models.TextField(blank=True, help_text='Encrypted OAuth tokens, passwords, etc.')),
                ('server_url', models.URLField(blank=True, help_text='Server URL for CalDAV, Exchange, etc.')),
                ('username', models.CharField(blank=True, help_text='Username for basic auth providers', max_length=255)),
                ('external_calendar_id', models.CharField(blank=True, help_text='External calendar ID (e.g., Google Calendar ID)', max_length=255)),
                ('external_calendar_name', models.CharField(blank=True, help_text='Name of the external calendar', max_length=255)),
                ('sync_direction', models.CharField(choices=[('import_only', 'Import Only (External → Linguify)'), ('export_only', 'Export Only (Linguify → External)'), ('bidirectional', 'Bidirectional Sync')], default='bidirectional', help_text='Direction of synchronization', max_length=20)),
                ('sync_frequency', models.CharField(choices=[('manual', 'Manual'), ('15min', 'Every 15 minutes'), ('30min', 'Every 30 minutes'), ('1hour', 'Every hour'), ('6hours', 'Every 6 hours'), ('daily', 'Daily')], default='1hour', help_text='How often to synchronize', max_length=10)),
                ('auto_sync_enabled', models.BooleanField(default=True, help_text='Enable automatic synchronization')),
                ('sync_past_days', models.IntegerField(default=30, help_text='Number of past days to sync')),
                ('sync_future_days', models.IntegerField(default=365, help_text='Number of future days to sync')),
                ('sync_only_busy', models.BooleanField(default=False, help_text="Only sync events marked as 'busy'")),
                ('exclude_all_day_events', models.BooleanField(default=False, help_text='Exclude all-day events from sync')),
                ('active', models.BooleanField(default=True, help_text='Is this provider active?')),
                ('last_sync_at', models.DateTimeField(blank=True, help_text='Last successful synchronization time', null=True)),
                ('last_sync_status', models.CharField(choices=[('success', 'Success'), ('error', 'Error'), ('warning', 'Warning'), ('never', 'Never Synced')], default='never', help_text='Status of last sync attempt', max_length=20)),
                ('last_sync_error', models.TextField(blank=True, help_text='Error message from last sync attempt')),
                ('sync_count', models.IntegerField(default=0, help_text='Total number of successful syncs')),
                ('connection_verified', models.BooleanField(default=False, help_text='Has the connection been verified?')),
                ('verification_error', models.TextField(blank=True, help_text='Error message from connection verification')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('provider_config', models.JSONField(blank=True, default=dict, help_text='Provider-specific configuration options')),
                ('user', models.ForeignKey(help_text='User who owns this provider configuration', on_delete=django.db.models.deletion.CASCADE, related_name='calendar_providers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Calendar Provider',
                'verbose_name_plural': 'Calendar Providers',
                'db_table': 'calendar_provider',
            },
        ),
        migrations.CreateModel(
            name='CalendarProviderSync',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('sync_type', models.CharField(choices=[('auto', 'Automatic'), ('manual', 'Manual'), ('initial', 'Initial Setup')], default='auto', max_length=10)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('duration_seconds', models.FloatField(blank=True, null=True)),
                ('success', models.BooleanField(default=False)),
                ('error_message', models.TextField(blank=True)),
                ('events_imported', models.IntegerField(default=0)),
                ('events_exported', models.IntegerField(default=0)),
                ('events_updated', models.IntegerField(default=0)),
                ('events_deleted', models.IntegerField(default=0)),
                ('events_skipped', models.IntegerField(default=0)),
                ('sync_details', models.JSONField(blank=True, default=dict)),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sync_history', to='calendar_app.calendarprovider')),
            ],
            options={
                'verbose_name': 'Calendar Provider Sync',
                'verbose_name_plural': 'Calendar Provider Syncs',
                'db_table': 'calendar_provider_sync',
            },
        ),
        migrations.AddIndex(
            model_name='calendarprovider',
            index=models.Index(fields=['user', 'active'], name='calendar_pr_user_id_3bb8a0_idx'),
        ),
        migrations.AddIndex(
            model_name='calendarprovider',
            index=models.Index(fields=['provider_type', 'active'], name='calendar_pr_provide_0d7dac_idx'),
        ),
        migrations.AddIndex(
            model_name='calendarprovider',
            index=models.Index(fields=['auto_sync_enabled', 'sync_frequency'], name='calendar_pr_auto_sy_9e6413_idx'),
        ),
        migrations.AddIndex(
            model_name='calendarprovider',
            index=models.Index(fields=['last_sync_at'], name='calendar_pr_last_sy_46bffd_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='calendarprovider',
            unique_together={('user', 'name')},
        ),
        migrations.AddIndex(
            model_name='calendarprovidersync',
            index=models.Index(fields=['provider', 'started_at'], name='calendar_pr_provide_c7669e_idx'),
        ),
        migrations.AddIndex(
            model_name='calendarprovidersync',
            index=models.Index(fields=['success', 'started_at'], name='calendar_pr_success_8baf05_idx'),
        ),
    ]
