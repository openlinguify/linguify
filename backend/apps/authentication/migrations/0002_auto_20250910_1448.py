# Generated by Django 5.1.10 on 2025-09-10 12:48

from django.db import migrations
from django.contrib.auth import get_user_model
import os


def create_superuser(apps, schema_editor):
    User = get_user_model()
    
    # Récupérer les variables d'environnement
    username = os.environ.get('DJANGO_SUPERUSER_USERNAME')
    email = os.environ.get('DJANGO_SUPERUSER_EMAIL') 
    password = os.environ.get('DJANGO_SUPERUSER_PASSWORD')
    
    # Si les variables ne sont pas définies, ne rien faire
    if not all([username, email, password]):
        print("Variables DJANGO_SUPERUSER_* non définies - superuser non créé")
        return
    
    # Vérifier si un superuser existe déjà
    if User.objects.filter(is_superuser=True).exists():
        print("Un superuser existe déjà")
        return
        
    # Vérifier si l'utilisateur avec cet email existe déjà
    if User.objects.filter(email=email).exists():
        user = User.objects.get(email=email)
        if not user.is_superuser:
            # Promouvoir l'utilisateur existant en superuser
            user.is_superuser = True
            user.is_staff = True
            user.save()
            print(f"Utilisateur {email} promu en superuser avec succès!")
        else:
            print(f"Superuser {email} existe déjà.")
        return
    
    # Créer le superuser
    try:
        user = User.objects.create_superuser(
            username=username,
            email=email, 
            password=password
        )
        print(f"Superuser créé avec succès! Username: {username}, Email: {email}")
    except Exception as e:
        print(f"Erreur lors de la création du superuser: {str(e)}")


def reverse_create_superuser(apps, schema_editor):
    # Ne rien faire lors du rollback - on ne supprime pas le superuser
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('authentication', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(create_superuser, reverse_create_superuser),
    ]
