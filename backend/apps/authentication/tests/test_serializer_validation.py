#!/usr/bin/env python
"""
Test simple pour v√©rifier la validation case-insensitive dans ProfileUpdateSerializer
"""

# Ce script doit √™tre ex√©cut√© dans l'environnement Django avec:
# python manage.py shell < test_serializer_validation.py

from django.contrib.auth import get_user_model
from apps.authentication.serializers.settings_serializers import ProfileUpdateSerializer

User = get_user_model()

print("üß™ Test de validation username case-insensitive dans ProfileUpdateSerializer")
print("=" * 60)

# R√©cup√©rer ou cr√©er un utilisateur test
try:
    test_user = User.objects.get(username='DarkVador')
    print(f"‚úÖ Utilisateur trouv√©: {test_user.username}")
except User.DoesNotExist:
    print("‚ùå L'utilisateur DarkVador n'existe pas")
    exit()

# Essayer de mettre √† jour avec un username existant (diff√©rente casse)
print("\nüìù Test: Essayer de changer 'DarkVador' en 'admin' (devrait √©chouer)")

serializer = ProfileUpdateSerializer(
    instance=test_user,
    data={'username': 'admin'},
    partial=True
)

if serializer.is_valid():
    print("‚ùå ERREUR: La validation devrait √©chouer!")
else:
    print("‚úÖ Validation √©chou√©e comme pr√©vu:")
    print(f"   Erreur: {serializer.errors}")

# Test avec diff√©rentes casses
test_cases = ['Admin', 'ADMIN', 'aDmIn']

for test_username in test_cases:
    print(f"\nüìù Test: Essayer de changer en '{test_username}'")
    serializer = ProfileUpdateSerializer(
        instance=test_user,
        data={'username': test_username},
        partial=True
    )
    
    if serializer.is_valid():
        print("‚ùå ERREUR: La validation devrait √©chouer!")
    else:
        print("‚úÖ Validation √©chou√©e comme pr√©vu:")
        print(f"   Erreur: {serializer.errors.get('username', ['Erreur inconnue'])[0]}")

print("\n‚úÖ Tests termin√©s!")