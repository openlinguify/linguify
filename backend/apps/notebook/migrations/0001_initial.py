# Generated by Django 5.1.10 on 2025-09-04 23:39

import apps.notebook.models.models
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='NoteCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='notebook.notecategory')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='note_categories', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ['name'],
                'unique_together': {('name', 'user', 'parent')},
            },
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('content', models.TextField(blank=True, default='')),
                ('note_type', models.CharField(choices=[('NOTE', 'Note'), ('TASK', 'Task'), ('REMINDER', 'Reminder'), ('MEETING', 'Meeting'), ('IDEA', 'Idea'), ('PROJECT', 'Project'), ('VOCABULARY', 'Vocabulary'), ('GRAMMAR', 'Grammar'), ('EXPRESSION', 'Expression'), ('CULTURE', 'Culture'), ('EVENT', 'Event'), ('TEXT', 'Text'), ('IMAGE', 'Image'), ('VIDEO', 'Video')], default='NOTE', max_length=20)),
                ('language', models.CharField(blank=True, max_length=50, null=True)),
                ('translation', models.TextField(blank=True, null=True)),
                ('pronunciation', models.CharField(blank=True, max_length=255, null=True)),
                ('example_sentences', models.JSONField(blank=True, default=apps.notebook.models.models.default_list)),
                ('related_words', models.JSONField(blank=True, default=apps.notebook.models.models.default_list)),
                ('difficulty', models.CharField(blank=True, choices=[('BEGINNER', 'Beginner'), ('INTERMEDIATE', 'Intermediate'), ('ADVANCED', 'Advanced')], max_length=20, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('review_count', models.IntegerField(default=0)),
                ('is_pinned', models.BooleanField(default=False)),
                ('is_archived', models.BooleanField(default=False)),
                ('priority', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High')], default='MEDIUM', max_length=10)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='notebook.notecategory')),
            ],
            options={
                'ordering': ['-is_pinned', '-updated_at', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SharedNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shared_at', models.DateTimeField(auto_now_add=True)),
                ('can_edit', models.BooleanField(default=False)),
                ('note', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notebook.note')),
                ('shared_with', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shared_notes', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddIndex(
            model_name='note',
            index=models.Index(fields=['user', 'category'], name='notebook_no_user_id_7d99ae_idx'),
        ),
        migrations.AddIndex(
            model_name='note',
            index=models.Index(fields=['-updated_at'], name='notebook_no_updated_4ab12c_idx'),
        ),
        migrations.AddIndex(
            model_name='note',
            index=models.Index(fields=['user', 'is_archived'], name='notebook_no_user_id_843600_idx'),
        ),
        migrations.AddIndex(
            model_name='note',
            index=models.Index(fields=['user', 'is_pinned'], name='notebook_no_user_id_9c7857_idx'),
        ),
        migrations.AddIndex(
            model_name='note',
            index=models.Index(fields=['user', 'last_reviewed_at'], name='notebook_no_user_id_f0b7a1_idx'),
        ),
        migrations.AddIndex(
            model_name='note',
            index=models.Index(fields=['user', 'note_type'], name='notebook_no_user_id_c016e3_idx'),
        ),
        migrations.AddIndex(
            model_name='note',
            index=models.Index(fields=['language'], name='notebook_no_languag_76a521_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='sharednote',
            unique_together={('note', 'shared_with')},
        ),
    ]
