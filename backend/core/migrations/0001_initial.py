# Generated by Django 5.1.10 on 2025-09-04 23:39

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Nom du tag (1-50 caractères)', max_length=50, validators=[django.core.validators.MinLengthValidator(1), django.core.validators.MaxLengthValidator(50)])),
                ('color', models.CharField(default='#3B82F6', help_text='Couleur hexadécimale du tag', max_length=7)),
                ('description', models.TextField(blank=True, help_text='Description optionnelle du tag (max 200 caractères)', max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('usage_count_total', models.PositiveIntegerField(default=0)),
                ('usage_count_notebook', models.PositiveIntegerField(default=0)),
                ('usage_count_todo', models.PositiveIntegerField(default=0)),
                ('usage_count_calendar', models.PositiveIntegerField(default=0)),
                ('usage_count_revision', models.PositiveIntegerField(default=0)),
                ('usage_count_documents', models.PositiveIntegerField(default=0)),
                ('usage_count_community', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('is_favorite', models.BooleanField(default=False, help_text='Tags favoris affichés en premier')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='linguify_tags', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Tag Global',
                'verbose_name_plural': 'Tags Globaux',
                'ordering': ['-is_favorite', '-usage_count_total', 'name'],
            },
        ),
        migrations.CreateModel(
            name='TagRelation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('app_name', models.CharField(help_text="Nom de l'app (notebook, todo, calendar, etc.)", max_length=50)),
                ('model_name', models.CharField(help_text='Nom du modèle (Note, Task, Event, etc.)', max_length=50)),
                ('object_id', models.UUIDField(help_text="ID de l'objet taggé")),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='relations', to='core.tag')),
            ],
            options={
                'verbose_name': 'Relation Tag',
                'verbose_name_plural': 'Relations Tags',
            },
        ),
        migrations.AddIndex(
            model_name='tag',
            index=models.Index(fields=['user', 'name'], name='core_tag_user_id_74e398_idx'),
        ),
        migrations.AddIndex(
            model_name='tag',
            index=models.Index(fields=['user', '-usage_count_total'], name='core_tag_user_id_a72cf3_idx'),
        ),
        migrations.AddIndex(
            model_name='tag',
            index=models.Index(fields=['user', 'is_active'], name='core_tag_user_id_aebd03_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='tag',
            unique_together={('user', 'name')},
        ),
        migrations.AddIndex(
            model_name='tagrelation',
            index=models.Index(fields=['app_name', 'model_name', 'object_id'], name='core_tagrel_app_nam_4cba70_idx'),
        ),
        migrations.AddIndex(
            model_name='tagrelation',
            index=models.Index(fields=['tag', 'app_name'], name='core_tagrel_tag_id_f7aa38_idx'),
        ),
        migrations.AddIndex(
            model_name='tagrelation',
            index=models.Index(fields=['created_by', 'app_name'], name='core_tagrel_created_dcf53a_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='tagrelation',
            unique_together={('tag', 'app_name', 'model_name', 'object_id')},
        ),
    ]
