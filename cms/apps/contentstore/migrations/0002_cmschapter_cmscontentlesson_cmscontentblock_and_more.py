# Generated by Django 5.2.4 on 2025-07-27 13:01

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('contentstore', '0001_initial'),
        ('teachers', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CMSChapter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('sync_status', models.CharField(choices=[('draft', 'Draft'), ('pending', 'Pending Sync'), ('synced', 'Synced'), ('failed', 'Sync Failed')], default='draft', max_length=20)),
                ('backend_id', models.PositiveIntegerField(blank=True, null=True)),
                ('last_sync', models.DateTimeField(blank=True, null=True)),
                ('sync_error', models.TextField(blank=True)),
                ('title_en', models.CharField(max_length=100)),
                ('title_fr', models.CharField(max_length=100)),
                ('title_es', models.CharField(max_length=100)),
                ('title_nl', models.CharField(max_length=100)),
                ('description_en', models.TextField(blank=True, null=True)),
                ('description_fr', models.TextField(blank=True, null=True)),
                ('description_es', models.TextField(blank=True, null=True)),
                ('description_nl', models.TextField(blank=True, null=True)),
                ('theme', models.CharField(help_text="Theme like 'Introductions', 'Describing house'", max_length=50)),
                ('order', models.PositiveIntegerField(default=1)),
                ('style', models.CharField(choices=[('Open Linguify', 'Open Linguify Style'), ('OpenLinguify', 'OpenLinguify Style'), ('custom', 'Custom Style')], default='Open Linguify', max_length=20)),
                ('points_reward', models.PositiveIntegerField(default=100)),
            ],
            options={
                'db_table': 'cms_chapters',
                'ordering': ['unit__order', 'order'],
            },
        ),
        migrations.CreateModel(
            name='CMSContentLesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('sync_status', models.CharField(choices=[('draft', 'Draft'), ('pending', 'Pending Sync'), ('synced', 'Synced'), ('failed', 'Sync Failed')], default='draft', max_length=20)),
                ('backend_id', models.PositiveIntegerField(blank=True, null=True)),
                ('last_sync', models.DateTimeField(blank=True, null=True)),
                ('sync_error', models.TextField(blank=True)),
                ('title_en', models.CharField(max_length=100)),
                ('title_fr', models.CharField(max_length=100)),
                ('title_es', models.CharField(max_length=100)),
                ('title_nl', models.CharField(max_length=100)),
                ('instruction_en', models.TextField(blank=True, null=True)),
                ('instruction_fr', models.TextField(blank=True, null=True)),
                ('instruction_es', models.TextField(blank=True, null=True)),
                ('instruction_nl', models.TextField(blank=True, null=True)),
                ('content_type', models.CharField(choices=[('text', '📄 Texte'), ('video', '🎥 Vidéo'), ('audio', '🎵 Audio'), ('image', '🖼️ Image'), ('document', '📎 Document'), ('link', '🔗 Lien externe'), ('multiple_choice', '✅ QCM'), ('true_false', '✔️ Vrai/Faux'), ('fill_blank', '✏️ Texte à trous'), ('matching', '🔗 Association'), ('ordering', '📋 Tri/Ordre'), ('drag_drop', '🖱️ Glisser-déposer'), ('code_editor', '💻 Éditeur de code'), ('code_review', '👀 Revue de code'), ('terminal', '⌨️ Terminal'), ('vocabulary', '📝 Vocabulaire'), ('grammar', '🔤 Grammaire'), ('speaking', '🗣️ Expression orale'), ('simulation', '🎮 Simulation'), ('whiteboard', '📋 Tableau blanc'), ('poll', '📊 Sondage'), ('forum', '💬 Forum')], max_length=20)),
                ('estimated_duration', models.PositiveIntegerField(default=5, help_text='Duration in minutes')),
                ('order', models.PositiveIntegerField(default=1)),
            ],
            options={
                'db_table': 'cms_content_lessons',
                'ordering': ['lesson__unit__order', 'lesson__order', 'order'],
            },
        ),
        migrations.CreateModel(
            name='CMSContentBlock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('sync_status', models.CharField(choices=[('draft', 'Draft'), ('pending', 'Pending Sync'), ('synced', 'Synced'), ('failed', 'Sync Failed')], default='draft', max_length=20)),
                ('backend_id', models.PositiveIntegerField(blank=True, null=True)),
                ('last_sync', models.DateTimeField(blank=True, null=True)),
                ('sync_error', models.TextField(blank=True)),
                ('block_type', models.CharField(choices=[('text', '📄 Bloc de texte'), ('code', '💻 Code'), ('quiz', '❓ Quiz'), ('exercise', '✏️ Exercice'), ('media', '🎥 Média'), ('resource', '📎 Ressource')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('content_data', models.JSONField(default=dict, help_text='Structured content data')),
                ('order', models.PositiveIntegerField(default=1)),
                ('is_required', models.BooleanField(default=True)),
                ('points', models.PositiveIntegerField(default=0, help_text='Points earned for completion')),
                ('content_lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='content_blocks', to='contentstore.cmscontentlesson')),
            ],
            options={
                'db_table': 'cms_content_blocks',
                'ordering': ['content_lesson', 'order'],
                'unique_together': {('content_lesson', 'order')},
            },
        ),
        migrations.CreateModel(
            name='CMSLesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('sync_status', models.CharField(choices=[('draft', 'Draft'), ('pending', 'Pending Sync'), ('synced', 'Synced'), ('failed', 'Sync Failed')], default='draft', max_length=20)),
                ('backend_id', models.PositiveIntegerField(blank=True, null=True)),
                ('last_sync', models.DateTimeField(blank=True, null=True)),
                ('sync_error', models.TextField(blank=True)),
                ('title_en', models.CharField(max_length=100)),
                ('title_fr', models.CharField(max_length=100)),
                ('title_es', models.CharField(max_length=100)),
                ('title_nl', models.CharField(max_length=100)),
                ('description_en', models.TextField(blank=True, null=True)),
                ('description_fr', models.TextField(blank=True, null=True)),
                ('description_es', models.TextField(blank=True, null=True)),
                ('description_nl', models.TextField(blank=True, null=True)),
                ('lesson_type', models.CharField(choices=[('theory', '📖 Théorie'), ('practice', '💡 Pratique'), ('exercise', '✏️ Exercice'), ('project', '🚀 Projet'), ('quiz', '❓ Quiz'), ('video', '🎥 Vidéo'), ('discussion', '💬 Discussion'), ('vocabulary', '📝 Vocabulaire'), ('grammar', '🔤 Grammaire'), ('coding', '💻 Programmation'), ('debug', '🐛 Débogage'), ('lab', '🧪 Laboratoire'), ('case_study', '📋 Étude de cas')], default='vocabulary', max_length=20)),
                ('estimated_duration', models.PositiveIntegerField(default=10, help_text='Duration in minutes')),
                ('order', models.PositiveIntegerField(default=1)),
                ('chapter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lessons', to='contentstore.cmschapter')),
            ],
            options={
                'db_table': 'cms_lessons',
                'ordering': ['unit__order', 'order'],
            },
        ),
        migrations.AddField(
            model_name='cmscontentlesson',
            name='lesson',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='content_lessons', to='contentstore.cmslesson'),
        ),
        migrations.CreateModel(
            name='CMSQuizQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('sync_status', models.CharField(choices=[('draft', 'Draft'), ('pending', 'Pending Sync'), ('synced', 'Synced'), ('failed', 'Sync Failed')], default='draft', max_length=20)),
                ('backend_id', models.PositiveIntegerField(blank=True, null=True)),
                ('last_sync', models.DateTimeField(blank=True, null=True)),
                ('sync_error', models.TextField(blank=True)),
                ('question_type', models.CharField(choices=[('multiple_choice', 'QCM'), ('true_false', 'Vrai/Faux'), ('fill_blank', 'Texte à trous'), ('short_answer', 'Réponse courte'), ('code', 'Code')], max_length=20)),
                ('question_text', models.TextField()),
                ('question_data', models.JSONField(default=dict, help_text='Question options, code, etc.')),
                ('correct_answer', models.JSONField(default=dict, help_text='Correct answer(s)')),
                ('explanation', models.TextField(blank=True)),
                ('points', models.PositiveIntegerField(default=1)),
                ('order', models.PositiveIntegerField(default=1)),
                ('content_block', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='contentstore.cmscontentblock')),
            ],
            options={
                'db_table': 'cms_quiz_questions',
                'ordering': ['content_block', 'order'],
            },
        ),
        migrations.CreateModel(
            name='CMSResource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('sync_status', models.CharField(choices=[('draft', 'Draft'), ('pending', 'Pending Sync'), ('synced', 'Synced'), ('failed', 'Sync Failed')], default='draft', max_length=20)),
                ('backend_id', models.PositiveIntegerField(blank=True, null=True)),
                ('last_sync', models.DateTimeField(blank=True, null=True)),
                ('sync_error', models.TextField(blank=True)),
                ('resource_type', models.CharField(choices=[('file', '📎 Fichier'), ('link', '🔗 Lien'), ('book', '📚 Livre'), ('video', '🎥 Vidéo externe'), ('tool', '🔧 Outil'), ('dataset', '📊 Jeu de données')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('url', models.URLField(blank=True)),
                ('file', models.FileField(blank=True, upload_to='course_resources/')),
                ('is_required', models.BooleanField(default=False)),
                ('order', models.PositiveIntegerField(default=1)),
                ('content_lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resources', to='contentstore.cmscontentlesson')),
            ],
            options={
                'db_table': 'cms_resources',
                'ordering': ['content_lesson', 'order'],
            },
        ),
        migrations.CreateModel(
            name='CMSTheoryContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('sync_status', models.CharField(choices=[('draft', 'Draft'), ('pending', 'Pending Sync'), ('synced', 'Synced'), ('failed', 'Sync Failed')], default='draft', max_length=20)),
                ('backend_id', models.PositiveIntegerField(blank=True, null=True)),
                ('last_sync', models.DateTimeField(blank=True, null=True)),
                ('sync_error', models.TextField(blank=True)),
                ('content_en', models.TextField()),
                ('content_fr', models.TextField()),
                ('content_es', models.TextField()),
                ('content_nl', models.TextField()),
                ('content_lesson', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='theory', to='contentstore.cmscontentlesson')),
            ],
            options={
                'db_table': 'cms_theory_content',
            },
        ),
        migrations.CreateModel(
            name='CMSUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('sync_status', models.CharField(choices=[('draft', 'Draft'), ('pending', 'Pending Sync'), ('synced', 'Synced'), ('failed', 'Sync Failed')], default='draft', max_length=20)),
                ('backend_id', models.PositiveIntegerField(blank=True, null=True)),
                ('last_sync', models.DateTimeField(blank=True, null=True)),
                ('sync_error', models.TextField(blank=True)),
                ('title_en', models.CharField(max_length=100)),
                ('title_fr', models.CharField(max_length=100)),
                ('title_es', models.CharField(max_length=100)),
                ('title_nl', models.CharField(max_length=100)),
                ('description_en', models.TextField(blank=True, null=True)),
                ('description_fr', models.TextField(blank=True, null=True)),
                ('description_es', models.TextField(blank=True, null=True)),
                ('description_nl', models.TextField(blank=True, null=True)),
                ('category', models.CharField(choices=[('languages', '🗣️ Langues'), ('programming', '💻 Programmation'), ('engineering', '🏗️ Ingénierie'), ('social_sciences', '🧠 Sciences sociales'), ('business', '📊 Business & Économie'), ('creative', '🎨 Arts & Créatif'), ('sciences', '🔬 Sciences & Maths'), ('health', '⚕️ Santé & Médecine'), ('sports', '🏃 Sport & Bien-être'), ('technology', '🔧 Technologie'), ('other', '📚 Autre')], default='other', max_length=20)),
                ('level', models.CharField(choices=[('beginner', 'Débutant'), ('intermediate', 'Intermédiaire'), ('advanced', 'Avancé'), ('expert', 'Expert')], default='beginner', max_length=12)),
                ('tags', models.JSONField(default=list, help_text="Course tags like ['Python', 'Web', 'API']")),
                ('order', models.PositiveIntegerField(default=1)),
                ('duration_hours', models.PositiveIntegerField(default=10, help_text='Estimated course duration in hours')),
                ('prerequisites', models.TextField(blank=True, help_text='Required knowledge or courses')),
                ('learning_objectives', models.JSONField(default=list, help_text='What students will learn')),
                ('is_published', models.BooleanField(default=False)),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('rating', models.DecimalField(decimal_places=2, default=0, help_text='Average rating', max_digits=3)),
                ('total_enrollments', models.PositiveIntegerField(default=0)),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='units', to='teachers.teacher')),
            ],
            options={
                'db_table': 'cms_units',
                'ordering': ['order'],
                'unique_together': {('teacher', 'order')},
            },
        ),
        migrations.AddField(
            model_name='cmslesson',
            name='unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lessons', to='contentstore.cmsunit'),
        ),
        migrations.AddField(
            model_name='cmschapter',
            name='unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chapters', to='contentstore.cmsunit'),
        ),
        migrations.CreateModel(
            name='CMSVocabularyList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('sync_status', models.CharField(choices=[('draft', 'Draft'), ('pending', 'Pending Sync'), ('synced', 'Synced'), ('failed', 'Sync Failed')], default='draft', max_length=20)),
                ('backend_id', models.PositiveIntegerField(blank=True, null=True)),
                ('last_sync', models.DateTimeField(blank=True, null=True)),
                ('sync_error', models.TextField(blank=True)),
                ('title_en', models.CharField(max_length=100)),
                ('title_fr', models.CharField(max_length=100)),
                ('title_es', models.CharField(max_length=100)),
                ('title_nl', models.CharField(max_length=100)),
                ('content_lesson', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='vocabulary', to='contentstore.cmscontentlesson')),
            ],
            options={
                'db_table': 'cms_vocabulary_lists',
            },
        ),
        migrations.CreateModel(
            name='CMSVocabularyWord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('sync_status', models.CharField(choices=[('draft', 'Draft'), ('pending', 'Pending Sync'), ('synced', 'Synced'), ('failed', 'Sync Failed')], default='draft', max_length=20)),
                ('backend_id', models.PositiveIntegerField(blank=True, null=True)),
                ('last_sync', models.DateTimeField(blank=True, null=True)),
                ('sync_error', models.TextField(blank=True)),
                ('word_en', models.CharField(max_length=100)),
                ('word_fr', models.CharField(max_length=100)),
                ('word_es', models.CharField(max_length=100)),
                ('word_nl', models.CharField(max_length=100)),
                ('pronunciation', models.CharField(blank=True, max_length=200)),
                ('audio_file', models.FileField(blank=True, upload_to='vocabulary/audio/')),
                ('image', models.ImageField(blank=True, upload_to='vocabulary/images/')),
                ('order', models.PositiveIntegerField(default=1)),
                ('vocabulary_list', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='words', to='contentstore.cmsvocabularylist')),
            ],
            options={
                'db_table': 'cms_vocabulary_words',
                'ordering': ['order'],
            },
        ),
        migrations.AlterUniqueTogether(
            name='cmscontentlesson',
            unique_together={('lesson', 'order')},
        ),
        migrations.AlterUniqueTogether(
            name='cmslesson',
            unique_together={('unit', 'order')},
        ),
        migrations.AlterUniqueTogether(
            name='cmschapter',
            unique_together={('unit', 'order')},
        ),
    ]
