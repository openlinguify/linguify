# Generated by Django 5.2.4 on 2025-07-27 12:30

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ContentLibrary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('sync_status', models.CharField(choices=[('draft', 'Draft'), ('pending', 'Pending Sync'), ('synced', 'Synced'), ('failed', 'Sync Failed')], default='draft', max_length=20)),
                ('backend_id', models.PositiveIntegerField(blank=True, null=True)),
                ('last_sync', models.DateTimeField(blank=True, null=True)),
                ('sync_error', models.TextField(blank=True)),
                ('library_key', models.CharField(max_length=255, unique=True)),
                ('display_name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('library_type', models.CharField(default='problem-bank', max_length=50)),
                ('version', models.PositiveIntegerField(default=1)),
                ('allow_public_learning', models.BooleanField(default=False)),
                ('allow_public_read', models.BooleanField(default=False)),
                ('bundle_uuid', models.UUIDField(default=uuid.uuid4)),
            ],
            options={
                'verbose_name_plural': 'Content Libraries',
                'db_table': 'contentstore_content_libraries',
            },
        ),
        migrations.CreateModel(
            name='CourseAsset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('sync_status', models.CharField(choices=[('draft', 'Draft'), ('pending', 'Pending Sync'), ('synced', 'Synced'), ('failed', 'Sync Failed')], default='draft', max_length=20)),
                ('backend_id', models.PositiveIntegerField(blank=True, null=True)),
                ('last_sync', models.DateTimeField(blank=True, null=True)),
                ('sync_error', models.TextField(blank=True)),
                ('asset_key', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('display_name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('asset_type', models.CharField(choices=[('image', 'Image'), ('video', 'Video'), ('audio', 'Audio'), ('document', 'Document'), ('archive', 'Archive'), ('other', 'Other')], max_length=20)),
                ('content_type', models.CharField(max_length=100)),
                ('file_size', models.PositiveIntegerField(help_text='File size in bytes')),
                ('file_path', models.FileField(upload_to='course_assets/%Y/%m/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png', 'gif', 'pdf', 'mp4', 'mp3', 'zip', 'ppt', 'pptx'])])),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='course_assets/thumbnails/')),
                ('is_locked', models.BooleanField(default=False, help_text='Prevents accidental deletion')),
                ('course_id', models.CharField(help_text='Course identifier where asset is used', max_length=255)),
                ('usage_locations', models.JSONField(default=list, help_text='List of locations where asset is referenced')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uploaded_assets', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'contentstore_course_assets',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CourseContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('sync_status', models.CharField(choices=[('draft', 'Draft'), ('pending', 'Pending Sync'), ('synced', 'Synced'), ('failed', 'Sync Failed')], default='draft', max_length=20)),
                ('backend_id', models.PositiveIntegerField(blank=True, null=True)),
                ('last_sync', models.DateTimeField(blank=True, null=True)),
                ('sync_error', models.TextField(blank=True)),
                ('content_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('usage_key', models.CharField(help_text='Unique identifier for content block', max_length=255, unique=True)),
                ('course_id', models.CharField(help_text='Course identifier', max_length=255)),
                ('parent_usage_key', models.CharField(blank=True, help_text='Parent content block', max_length=255)),
                ('display_name', models.CharField(max_length=255)),
                ('content_type', models.CharField(choices=[('html', 'HTML Content'), ('video', 'Video Content'), ('problem', 'Problem/Exercise'), ('discussion', 'Discussion'), ('text', 'Text Content'), ('sequence', 'Sequence'), ('vertical', 'Vertical'), ('chapter', 'Chapter')], max_length=20)),
                ('data', models.JSONField(default=dict, help_text='Content block data and settings')),
                ('metadata', models.JSONField(default=dict, help_text='Content block metadata')),
                ('version', models.PositiveIntegerField(default=1)),
                ('is_draft', models.BooleanField(default=True)),
                ('visibility', models.CharField(choices=[('public', 'Public'), ('private', 'Private'), ('staff_only', 'Staff Only')], default='public', max_length=20)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='authored_content', to=settings.AUTH_USER_MODEL)),
                ('last_modified_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modified_content', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'contentstore_course_content',
                'ordering': ['course_id', 'usage_key'],
            },
        ),
        migrations.CreateModel(
            name='CourseSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course_id', models.CharField(max_length=255, unique=True)),
                ('display_name', models.CharField(max_length=255)),
                ('short_description', models.TextField(blank=True)),
                ('overview', models.TextField(blank=True, help_text='Detailed course description')),
                ('language', models.CharField(default='en', max_length=10)),
                ('effort', models.CharField(blank=True, help_text="Expected effort (e.g., '2-4 hours per week')", max_length=100)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('enrollment_start', models.DateTimeField(blank=True, null=True)),
                ('enrollment_end', models.DateTimeField(blank=True, null=True)),
                ('advanced_settings', models.JSONField(default=dict)),
                ('grading_policy', models.JSONField(default=dict)),
                ('course_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='course_images', to='contentstore.courseasset')),
            ],
            options={
                'db_table': 'contentstore_course_settings',
            },
        ),
        migrations.AddIndex(
            model_name='courseasset',
            index=models.Index(fields=['course_id', 'asset_type'], name='contentstor_course__f25aba_idx'),
        ),
        migrations.AddIndex(
            model_name='courseasset',
            index=models.Index(fields=['created_at'], name='contentstor_created_1536e4_idx'),
        ),
        migrations.AddIndex(
            model_name='coursecontent',
            index=models.Index(fields=['course_id', 'content_type'], name='contentstor_course__57744c_idx'),
        ),
        migrations.AddIndex(
            model_name='coursecontent',
            index=models.Index(fields=['usage_key'], name='contentstor_usage_k_9d3ff5_idx'),
        ),
        migrations.AddIndex(
            model_name='coursecontent',
            index=models.Index(fields=['parent_usage_key'], name='contentstor_parent__fc4e11_idx'),
        ),
    ]
