name: Simple CI/CD

on:
  push:
    branches: [ develop ]
  workflow_dispatch:

permissions:
  contents: write
  actions: read

jobs:
  test-and-deploy:
    name: Test & Push to Main
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db_linguify
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    defaults:
      run:
        working-directory: ./backend
    
    steps:
      - uses: actions/checkout@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
      
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Poetry
        uses: abatilo/actions-poetry@v4
        with:
          poetry-version: '1.7.1'

      - name: Configure Poetry
        run: poetry config virtualenvs.create false

      - name: Install dependencies
        run: poetry install

      - name: Setup test environment
        run: |
          cp .env.example .env
          # Update DB configuration for CI
          sed -i 's/DB_NAME=.*/DB_NAME=test_db_linguify/g' .env
          sed -i 's/DB_USER=.*/DB_USER=postgres/g' .env
          sed -i 's/DB_PASSWORD=.*/DB_PASSWORD=postgres/g' .env
          sed -i 's/DB_HOST=.*/DB_HOST=localhost/g' .env
          sed -i 's/DB_PORT=.*/DB_PORT=5432/g' .env
          sed -i 's/DEBUG=.*/DEBUG=True/g' .env
          sed -i 's/SECRET_KEY=.*/SECRET_KEY=test_secret_key_for_ci/g' .env
          
          # Add DEV_DB variables
          echo "" >> .env
          echo "DEV_DB_NAME=test_db_linguify" >> .env
          echo "DEV_DB_USER=postgres" >> .env
          echo "DEV_DB_PASSWORD=postgres" >> .env
          echo "DEV_DB_HOST=localhost" >> .env
          echo "DEV_DB_PORT=5432" >> .env
          echo "TEST_MODE=True" >> .env
          echo "ALLOWED_HOSTS=*" >> .env

      - name: Run migrations
        run: |
          set -a
          source .env
          set +a
          poetry run python manage.py migrate
        env:
          TEST_MODE: 'True'

      - name: Run Tests
        run: |
          set -a
          source .env
          set +a
          echo "ðŸš€ Running Tests"
          poetry run python manage.py test \
            tests \
            apps.authentication.tests \
            apps.quizz.tests \
            apps.revision.tests \
            --verbosity=1 --keepdb --settings=core.settings_test
        env:
          TEST_MODE: 'True'
          CI: 'True'
      
      - name: Configure Git
        if: success()
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
      
      - name: Push to Main
        if: success()
        run: |
          echo "âœ… Tests passed! Pushing to main..."
          git checkout main
          git merge origin/develop --no-ff -m "Auto-deploy: Tests passed on develop

          All tests passed successfully on develop branch.
          Automatically merging to main for production deployment.
          
          ðŸ¤– Generated with [Claude Code](https://claude.ai/code)
          
          Co-Authored-By: Claude <noreply@anthropic.com>"
          git push origin main
          echo "ðŸš€ Successfully pushed to main!"

  # Deploy vers Production
  deploy-production:
    name: Deploy to Production
    needs: test-and-deploy
    runs-on: ubuntu-latest
    if: success()
    environment: production
    
    steps:
      - name: Deploy to Render Production
        uses: johnbeynon/render-deploy-action@v0.0.9
        with:
          service-id: srv-d149ag49c44c73d2f27g
          api-key: rnd_LYvNUTDvyHgmiPbryBLPTUl7qyHI
          
      - name: Production Deployment Status
        run: echo "ðŸš€ Production deployment triggered successfully!"